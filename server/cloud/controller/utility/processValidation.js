/**
 * Created by Lance on 2015-12-22.
 */

"use strict";

/**
 * The rule for a field.
 * @param {any} value - Any value.
 * @param {Function} validation - Validation function aka the rule.
 * @returns {Promise} nothing.
 */
export const fieldRule = (value, validation) => {
  return new Promise((resolve, reject) => {

    if (value) {
      const result = validation(value);

      if (result.isFailure) {
        reject(result.value);
      }
      else {
        resolve(result.value);
      }
    }
    else {
      resolve();
    }
  });

};

/**
 * Extract error component generated by hooks.
 * 收到的error的message格式为: Cloud Code validation failed. Error detail : {"code":123, "message": "自定义错误信息"}
 * @param {Object} err - Error object.
 * @returns {?Object} Returns an error object if applicable, otherwise null.
 */
export const extractHookError = (err) => {

  const errMessage = err.message;

  const codePrefix = "\"code\":";
  const codeIndex = errMessage.indexOf(codePrefix);

  const messagePrefix = ",\"message\":\"";
  const messageIndex = errMessage.indexOf(messagePrefix);

  if (codeIndex > -1 && messageIndex > -1) {
    const codeStartPos = codeIndex + codePrefix.length;
    const codeEndPos = messageIndex;
    const code = errMessage.substring(codeStartPos, codeEndPos);

    const messageStartPos = messageIndex + messagePrefix.length;
    const messageEndPos = errMessage.length - 2;
    const message = errMessage.substring(messageStartPos, messageEndPos);

    return {
      code: parseInt(code, 10),
      message
    };
  }
  else {
    return null;
  }
};
